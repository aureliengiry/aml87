security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN:
            - ROLE_USER
            - ROLE_ADMIN
            - ROLE_SONATA_ADMIN
            - ROLE_ALLOWED_TO_SWITCH

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            #switch_user:
            #   provider: app_user_provider
            form_login:
               provider: app_user_provider
               csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_members_area_logout
                target: app_main_index

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/espace-membres, roles: ROLE_USER }
