<?php

namespace Aml\Bundle\WebBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * Evenement
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvenementRepository extends EntityRepository
{
	/**
     * Fonction pour avoir les prochains évènements
     * 
     * @param int $id_communaute
     * @param int $limit
     * @return ArrayCollection
     */
	public function getEvenementsCalendar( $dateStart, $dateEnd )
	{
		$dateTimeStart = new \DateTime();
		$dateTimeStart->setTimestamp($dateStart);
		
		$dateTimeEnd = new \DateTime();
		$dateTimeEnd->setTimestamp($dateEnd);
		
		$q = $this->getEntityManager()->createQueryBuilder();		
		$q
			 ->select('e')
			 ->from('AmlWebBundle:Evenement', 'e')
			 ->where('e.dateStart > :dateStart')
			// ->andWhere('e.date_start < :date_end')
			 ->orderBy('e.dateStart', 'ASC')
			 ->setParameters(array
				 (
					'dateStart' => $dateTimeStart,
					//'date_end' => $dateTimeEnd,
				 ));
		
			
	    return $q->getQuery()->getResult();
	}
	
	/**
     * Fonction pour avoir les prochains évènements
     * 
     * @param int $id_communaute
     * @param int $limit
     * @return ArrayCollection
     */
	public function getNextEvenements(  )
	{
		$dateTimeStart = new \DateTime();
		$dateTimeStart->setTime(0,0);
		
		
		$q = $this->getEntityManager()->createQueryBuilder();		
		$q
			 ->select('e')
			 ->from('AmlWebBundle:Evenement', 'e')
			 ->where('e.dateStart >= :dateStart')
			 ->orderBy('e.dateStart', 'ASC')
			 ->setParameters(array
				 (
					'dateStart' => $dateTimeStart,
				 ));
		
			
	    return $q->getQuery()->getResult();
	}
}